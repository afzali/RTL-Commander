# RTL Commander - Migration Guide

## Moving from Legacy to Modular Structure

The codebase has been refactored from a monolithic structure to a modular one. This document provides guidance on how to migrate.

### Files to Remove

The following files are no longer needed and can be safely removed:

1. `background.js` - Replaced by files in `js/background/`
2. `content.js` - Replaced by files in `js/content/`
3. `popup/popup.js` - Replaced by files in `js/popup/`

### Changes Made

1. **Manifest Updates**:
   - Updated `manifest.json` to point to the new module structure
   - Changed background service worker to `js/background/index.js`
   - Updated content script path to `js/content/index.js`
   - Added web accessible resources for background modules

2. **Popup HTML Updates**:
   - Updated script import to use the module system: `<script type="module" src="../js/popup/index.js"></script>`

3. **Code Modularization**:
   - Background script split into: `index.js`, `contextMenus.js`, `messaging.js`, and `utils.js`
   - Content script split into: `index.js`, `initialization.js`, `messaging.js`, `observer.js`, `settings.js`, and `state.js`
   - Popup script split into: `index.js`, `state.js`, `tabs.js`, `editDialog.js`, `messaging.js`, `currentDomain.js`, `allDomains.js`, `clearButtons.js`, and `storageListener.js`

4. **Error Handling Improvements**:
   - Added better handling for "Extension context invalidated" errors
   - Implemented context validation checks throughout the codebase
   - Added recovery mechanisms for when the extension context becomes invalid

### How to Complete the Migration

1. Delete the legacy files:
   ```
   del background.js
   del content.js
   del popup\popup.js
   ```

2. Test the extension thoroughly to ensure all functionality works as expected

3. If any issues are encountered, check the browser console for error messages and refer to the new modular code structure

### Note

The migration has been designed to be backward compatible. The `manifest.json` file has already been updated to use the new module structure, so the old files are no longer being loaded by the extension.
